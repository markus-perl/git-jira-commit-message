#!/usr/bin/php
<?php


$username = 'username';
$password = 'password';
$api = 'http://my.jira.url/rest/api/2/';


$configFile = getenv("HOME") . '/.git-jira-commit-message';
if (file_exists($configFile)) {
	$config = parse_ini_file($configFile, false);
	if ($config['username']) $username = $config['username'];
	if ($config['password']) $password = $config['password'];
        if ($config['api']) $api = $config['api'];
}

if (!isset($argv[1])) {
	echo 'Usage: ' . $argv[0] . ' <Jira Issue ID>' .PHP_EOL;
	exit(0);
}

$issueId = $argv[1];

function query($query) {
	global $api, $username, $password;
	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL, $api . $query);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch, CURLOPT_USERPWD, "$username:$password");
	curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
	$output = curl_exec($ch);
	curl_close($ch);
	return json_decode($output);
}

$result = query('search?jql=id=' . urlencode($issueId));

if (isset($result->issues['0'])) {
	$issue = $result->issues['0'];
	$message = $issue->key . ': ' . $issue->fields->summary;
	passthru('git commit -m ' . escapeshellarg($message) , $return_var);
	exit($return_var);
}
else
{
	echo 'Issue not found' . PHP_EOL;
	exit(1);
}
